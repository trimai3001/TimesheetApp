@model TimeSheetApp.Models.Employee
@{
    ViewData["Title"] = "Create";
    Layout = "~/Views/Shared/_EasyAdminLayout.cshtml";
}

<hr />

<div id="page-wrapper">
    <div class="graphs">
        <h3 class="blank1">Employee Form</h3>
        <div class="panel-body panel-body-inputin">
            <form class="form-horizontal" asp-action="Create">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group">
                    <label for="focusedinput" asp-for="Name" class="col-md-3 control-label"></label>
                    <div class="col-md-4">
                        <input asp-for="Name" type="text" class="form-control1">
                    </div>
                    <div class="col-md-4">
                        <span asp-validation-for="Name" class="text-danger"></span>
                    </div>
                </div>
                <div class="form-group">
                    <label for="focusedinput" asp-for="Email" class="col-md-3 control-label"></label>
                    <div class="col-md-4">
                        <input asp-for="Email" class="form-control1" />
                    </div>
                    <div class="col-md-4">
                        <span asp-validation-for="Email" class="text-danger"></span>
                    </div>
                </div>
                <div class="form-group">
                    <label for="focusedinput" asp-for="Role" class="col-md-3 control-label"></label>
                    <div class="col-md-4">
                        @Html.DropDownListFor(model => model.Role, new SelectList(ViewBag.Roles, "Id", "Name"), "Select Role", new { @class = "form-select form-control1", @name = "role" })
                    </div>
                    <div class="col-md-4">
                        <span asp-validation-for="Role" class="text-danger"></span>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-3"></div>
                    <div class="col-md-4">
                        <input type="submit" value="Submit" class="btn btn-success" id="create" />
                    </div>
                </div>
            </form>
        </div>

        <hr />
        <h3 class="blank1">All Employee</h3>
        <div class="col-md-4">
            <input id="myInput" type="text" placeholder="Search.." class="form-control1">
        </div>

        <br><br>
            <div class="panel-body1">
                <div class="tableFixHead" data-example-id="contextual-table">
                    <table class="table table-striped" id="table" data-toggle="table" data-search="true" data-search-align="left">
                        <thead>
                            <tr>
                                <th data-field="EmployeeId" data-sortable="true">#</th>
                                <th data-field="Name" data-sortable="true">Name</th>
                                <th data-field="Email" data-sortable="true">Email</th>
                                <th data-field="Role.Name" data-sortable="true">Role</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var employee in ViewBag.AllEmployee)
                            {
                                <tr>
                                    <td style="vertical-align:middle">@employee.EmployeeId</td>
                                    <td style="vertical-align:middle">@employee.Name</td>
                                    <td style="vertical-align:middle">@employee.Email</td>
                                    <td style="vertical-align:middle">@employee.Role.Name</td>
                                    <td style="text-align:center">
                                        <form asp-action="Delete">
                                            <div class="btn-group" role="group">
                                                <button class="btn btn-link" type="submit" value="Delete">
                                                    <span style="color: red">
                                                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-trash" viewBox="0 0 16 16">
                                                            <path d="M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z" />
                                                            <path fill-rule="evenodd" d="M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z" />
                                                        </svg>
                                                    </span>
                                                </button>
                                                <input type="hidden" asp-for="EmployeeId" class="form-control" value="@employee.Id" />
                                            </div>
                                        </form>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
    </div>
</div>


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        function customSort(sortName, sortOrder, data) {
            var order = sortOrder === 'desc' ? -1 : 1
            data.sort(function (a, b) {
                var aa = +((a[sortName] + '').replace(/[^\d]/g, ''))
                var bb = +((b[sortName] + '').replace(/[^\d]/g, ''))
                if (aa < bb) {
                    return order * -1
                }
                if (aa > bb) {
                    return order
                }
                return 0
            })
        }

        // Fix table head
        function tableFixHead(e) {
            const el = e.target,
                sT = el.scrollTop;
            el.querySelectorAll("thead th").forEach(th =>
                th.style.transform = `translateY(${sT}px)`
            );
        }
        document.querySelectorAll(".tableFixHead").forEach(el =>
            el.addEventListener("scroll", tableFixHead)
        );

        $(document).ready(function () {
            $("#myInput").on("keyup", function () {
                var value = $(this).val().toLowerCase();
                $("#table tr").filter(function () {
                    $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
                });
            });
        });
    </script>
}
